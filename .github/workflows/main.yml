name: Build and Deploy

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths-ignore:
      - '.github/workflows/**'
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      APP_SOLUTION: 'Holonet.Databank.App.sln'
      SQL_SOLUTION: 'Holonet.Databank.DB.sln'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore ${{ env.APP_SOLUTION }}

      - name: Build solution
        run: dotnet build ${{ env.APP_SOLUTION }} --configuration Release --no-restore

      - name: Publish Blazor app
        run: dotnet publish ./Holonet.Databank.Web/Holonet.Databank.Web.csproj --configuration Release --output ./publish_blazor

      - name: Publish API
        run: dotnet publish ./Holonet.Databank.API/Holonet.Databank.API.csproj --configuration Release --output ./publish_api

      - name: Upload Blazor artifact
        uses: actions/upload-artifact@v4
        with:
          name: blazor_app
          path: ./publish_blazor

      - name: Upload API artifact
        uses: actions/upload-artifact@v4
        with:
          name: api_app
          path: ./publish_api

  deploy_blazor:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download Blazor artifact
        uses: actions/download-artifact@v4
        with:
          name: blazor_app
          path: ./publish

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_53ABDA04E1BE428EB3EAD1B46B2473C6 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_2E7FBEC00FF64239885FF221E5D8A89A }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_250F168F2D404DDD9DCC444E7DB942A0 }}

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'databank-8808'
          slot-name: 'Production'
          package: ./publish

#      - name: Deploy to Azure Web App
#        uses: azure/webapps-deploy@v2
#        with:
#          app-name: 'YOUR_BLAZOR_APP_SERVICE_NAME'
#          publish-profile: ${{ secrets.BLAZOR_APP_PUBLISH_PROFILE }}
#          package: ./publish

  deploy_api:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download API artifact
        uses: actions/download-artifact@v4
        with:
          name: api_app
          path: ./publish

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_23B5628361194E5887FD78516D841E3F }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_20AD0E5A49B14735AC68F5E44FFDCDA1 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_14052200CECD44D6A5D77C36CABF04CE }}

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'databank-8808-api'
          slot-name: 'Production'
          package: ./publish

#      - name: Deploy to Azure Web App
#        uses: azure/webapps-deploy@v2
#        with:
#          app-name: 'YOUR_API_APP_SERVICE_NAME'
#          publish-profile: ${{ secrets.API_APP_PUBLISH_PROFILE }}
#          package: ./publish
