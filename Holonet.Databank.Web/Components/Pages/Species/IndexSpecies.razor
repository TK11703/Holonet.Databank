@page "/species/index"
@using Holonet.Databank.Core
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization
@rendermode InteractiveServer

<PageTitle>Species</PageTitle>
<CommonIcons />
<SetHeader>
	<h1>Species</h1>
	<hr />
</SetHeader>

<div class="container-fluid">
	@if (ResultPage == null)
	{
		<WaitingIndicator HorizontalAlignment="WaitingIndicator.Alignment.Left" />
	}
	else
	{
		<div class="row">
			<div class="col">
				<div class="d-flex">
					<div class="">
						<div class="card">
							<div class="card-body">
								<div class="row">
									<AuthorizeView>
										<Authorized>
											<div class="col-auto">
												<a href="/species/create" class="btn btn-primary" title="Create a new item">Create</a>
											</div>
										</Authorized>
									</AuthorizeView>
									<div class="col-auto">
										<EditForm EditContext="EditContext" OnValidSubmit="FilterResults">
											<div class="input-group">
												<input type="text" class="form-control" id="filterInput" placeholder="Filter by name" @bind-value=PageRequest.Filter>
												<button class="btn btn-outline-secondary" type="submit" id="filterButton" title="Click to find."><svg class="icon"><use xlink:href="#icon-funnel"></use></svg></button>
												<button class="btn btn-outline-secondary" type="button" id="clearFilterButton" title="Click to clear the filter." @onclick="ClearFilter"><svg class="icon"><use xlink:href="#icon-x-circle"></use></svg></button>
											</div>
										</EditForm>
									</div>
								</div>
							</div>
						</div>
					</div>
					<div class="ms-auto d-flex align-items-center pe-5">
						@if (ResultPage == null)
						{
							<h4 class="mb-0"> Total Species <span class="badge bg-secondary">0</span></h4>
						}
						else
						{
							<h4 class="mb-0"> Total Species <span class="badge bg-secondary">@ResultPage.ItemCount</span></h4>
						}
					</div>
				</div>
			</div>
		</div>
		<div class="row">
			<div class="col">
				<table class="table">
					<thead>
						<tr>
							<th><a href="javascript:void(0);" class="me-1" @onclick="@(() => Sort("Name"))">Name</a><i class="@(SortIndicator("Name"))"></i></th>
							<th>Shard</th>
							<th><a href="javascript:void(0);" class="me-1" @onclick="@(() => Sort("UpdatedOn"))">Updated On</a><i class="@(SortIndicator("UpdatedOn"))"></i></th>
							<th class="text-end">Actions</th>
						</tr>
					</thead>
					<tbody>
						@if (ResultPage != null && ResultPage.Collection != null)
						{
							@foreach (var speciesModel in ResultPage.Collection)
							{
								<tr class="align-middle">
									<td>
										<a href="/species/item/@(speciesModel.Id)" title="Click to view this item.">
											@speciesModel.Name
										</a>
									</td>
									<td>
										@if (!string.IsNullOrEmpty(@speciesModel.LatestShard))
										{
											<a class="btn btn-link btn-sm" href="@speciesModel.LatestShard" target="_blank" title="Click to view the source details.">
												<i class="bi bi-link"></i> @speciesModel.LatestShard
											</a>
										}
									</td>
									<td>@speciesModel.UpdatedOn</td>
									<td class="text-end">
										<AuthorizeView Roles="@ApplicationRole.Administrator">
											<Authorized>
												<a class="btn btn-outline-info btn-sm" href="/species/update/@(speciesModel.Id)?referrer=species/index">
													<svg class="icon"><use xlink:href="#icon-pencil"></use></svg>
												</a>
												<button class="btn btn-outline-danger btn-sm" @onclick="()=> { DeleteID = speciesModel.Id; Modal.Open(); Modal.SetSpecifics(SpeciesIdentification(speciesModel));}">
													<svg class="icon"><use xlink:href="#icon-trash"></use></svg>
												</button>
											</Authorized>
										</AuthorizeView>
									</td>
								</tr>
							}
						}
						else
						{
							<tr>
								<td colspan="2">No items found.</td>
							</tr>
						}
					</tbody>
				</table>
			</div>
		</div>
		<div class="row">
			<div class="col">
				@if (ResultPage != null)
				{
					<Pager PageIndex=@ResultPage.CurrentPage TotalPages=@ResultPage.TotalPages OnClick="PageIndexChanged" IsLastPage=@ResultPage.IsLastPage IsFirstPage=@ResultPage.IsFirstPage></Pager>
				}
			</div>
		</div>
	}
</div>

<AppModal @ref="Modal">
	<Title>Confirmation</Title>
	<Body>
		Do you sure want to delete this species?
	</Body>
	<Footer>
		<button type="button" class="btn btn-primary" style="width:80px" @onclick="HandleDelete">Yes</button>
		<button type="button" class="btn btn-secondary" data-dismiss="modal" @onclick="() => Modal.Close()">Cancel</button>
	</Footer>
</AppModal>