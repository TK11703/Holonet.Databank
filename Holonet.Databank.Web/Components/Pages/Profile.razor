@page "/profile"
@using Holonet.Databank.Web.Clients
@using Holonet.Databank.Web.Models
@using Microsoft.Graph.Models
@using Microsoft.Identity.Web
@inject GraphApiClient graphClient
@inject AuthorClient authorClient
@inject IHttpContextAccessor httpContextAccessor
@inject MicrosoftIdentityConsentAndConditionalAccessHandler msalHandler
@attribute [Authorize]

<PageTitle>User Profile</PageTitle>

<h3>User Data</h3>
<p class="small">User data was retrieved from Entra using the Graph API.</p>
<table class="table">
	<thead>
		<tr>
			<th>Information Type</th>
			<th>Value</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>Email Address</td>
			<td>
				@if (!string.IsNullOrEmpty(user?.Mail))
				{
					@user.Mail
				}
			</td>
		</tr>
		<tr>
			<td>Display Name</td>
			<td>
				@if (!string.IsNullOrEmpty(user?.DisplayName))
				{
					@user.DisplayName
				}
			</td>
		</tr>
		<tr>
			<td>Mobile Phone</td>
			<td>
				@if (!string.IsNullOrEmpty(user?.MobilePhone))
				{
					@user.MobilePhone
				}
			</td>
		</tr>
	</tbody>
</table>

<UserClaims />

@code {
	private User? user { get; set; }
	protected async override Task OnInitializedAsync()
	{
		try
		{
			user = await graphClient.GetGraphApiUser();

			if (user != null)
			{
				var author = await authorClient.Get(new Guid(httpContextAccessor.HttpContext.User.GetObjectId()));
				if(author == null)
				{
					var newAuthor = new AuthorModel()
					{
						AzureId = new Guid(httpContextAccessor.HttpContext.User.GetObjectId()),
						DisplayName = user.DisplayName,
						Email = user.Mail
					};
					var created = await authorClient.Create(newAuthor);
				}
			}
		}
		catch (Exception ex)
		{
			msalHandler.HandleException(ex);
		}
	}
}
