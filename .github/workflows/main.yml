name: Web and API CI/CD

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths-ignore:
      - '.github/workflows/**'
  pull_request:
    branches:
      - main

env:
  DOTNET_VERSION: '8.0.x'
  CONFIGURATION: 'Release'
  # Add additional global environment variables here

jobs:
  build-solution:
    name: Build Solution
    runs-on: ubuntu-latest
    env:
      APP_SOLUTION: 'Holonet.Databank.App-deploy.sln'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore dependencies
        run: dotnet restore ${{ env.APP_SOLUTION }}

      - name: Build Solution
        run: dotnet build --configuration ${{ env.CONFIGURATION }} ${{ env.APP_SOLUTION }}

  publish-api:
    name: Publish API
    needs: build-solution
    runs-on: ubuntu-latest
    env:
      DOTNET_VERSION: ${{ env.DOTNET_VERSION }}
      CONFIGURATION: ${{ env.CONFIGURATION }}
      PUBLISH_DIR: ./publish/api
      # Add secrets or deployment environment variables here (e.g., API_KEY: ${{ secrets.API_KEY }})
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Publish
        run: dotnet publish --configuration ${{ env.CONFIGURATION }} --output ${{ env.PUBLISH_DIR }} Holonet.Databank.API/Holonet.Databank.API.csproj

      - name: Login to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Azure Web App
        id: deploy-to-api
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'Holonet-Api-Databank-8108'
          slot-name: 'Production'
          package: ${{ env.PUBLISH_DIR }}

  publish-web:
    name: Publish Web
    needs: build-solution
    runs-on: ubuntu-latest
    env:
      DOTNET_VERSION: ${{ env.DOTNET_VERSION }}
      CONFIGURATION: ${{ env.CONFIGURATION }}
      PUBLISH_DIR: ./publish/web
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Publish
        run: dotnet publish --configuration ${{ env.CONFIGURATION }} --output ${{ env.PUBLISH_DIR }} Holonet.Databank.Web/Holonet.Databank.Web.csproj

      - name: Login to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'Holonet-App-Databank-8108'
          slot-name: 'Production'
          package: ${{ env.PUBLISH_DIR }}

  publish-appfunctions:
    name: Publish Holonet.Databank.AppFunctions
    needs: build-solution
    runs-on: ubuntu-latest
    env:
      DOTNET_VERSION: ${{ env.DOTNET_VERSION }}
      CONFIGURATION: ${{ env.CONFIGURATION }}
      PUBLISH_DIR: ./publish/appfunctions
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Publish
        run: dotnet publish --configuration ${{ env.CONFIGURATION }} --output ${{ env.PUBLISH_DIR }} Holonet.Databank.AppFunctions/Holonet.Databank.AppFunctions.csproj

      - name: Login to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Azure Function App
        id: deploy-to-function
        uses: azure/functions-action@v1
        with:
          app-name: 'Holonet-Func-Databank-8108'
          package: ${{ env.PUBLISH_DIR }}
